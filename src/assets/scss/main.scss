@use "sass:meta";
@use "var";
@use "fonts";

$height: var.$header-mobile-height + 10px;

html,
body {
  min-height: 100vh;
  max-width: 100vw;
  width: 100vw;
  display: flex;
  height: 100vh;
  overflow: hidden;
}

body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

li[tabindex]:focus-visible {
  box-shadow: inset 0 0 0 2px var.$text;
}

*:focus-visible,
input[type="checkbox"]:focus-visible {
  outline: 2px solid var.$text;
  outline-offset: 2px;
}

#auth {
  position: relative;
}

#app {
  display: flex;
  flex-direction: column;
  row-gap: var.$space-xs;
  position: relative;
  width: 100%;
  height: 100%;
  background-color: var.$lighterPurple;
  color: var.$text;
  z-index: 100;

  a {
    text-decoration: none;
    color: var.$text;
  }

  ul {
    display: flex;
    list-style: none;
    column-gap: var.$space-sm;

    li {
      display: flex;
      align-items: center;
    }
  }

  #delete-modal {
    top: 50%;
    right: unset;
    left: 50%;
    transform: translate(-50%, -50%);
    align-items: center;

    .buttons {
      display: flex;
      column-gap: var.$space-sm;
    }

    .delete,
    .not-delete {
      border-radius: var.$border-radius-default;
      box-shadow: var.$shadow-small;

      &:hover {
        transform: scale(1.1);
      }
    }

    .delete {
      background-color: var.$red;
    }

    .not-delete {
      background-color: var.$green;
    }
  }

  .content {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%;

    @media (max-width: var.$tablet) {
      padding-bottom: var.$header-mobile-height;
    }

    > main {
      display: flex;
      border-radius: var.$border-radius-default;
      width: 100%;
      padding: var.$space-md var.$space-sm 0;
      height: calc(100% - var.$header-mobile-height);
      overflow-y: auto;
      overflow-x: hidden;

      &:has(+ .react-simple-keyboard) {
        flex: 1;
      }

      @media (max-width: var.$tablet) {
        justify-content: center;
        padding: var.$space-sm var.$space-md calc(var.$space-xl + 3rem);
        height: 100%;
      }

      h1 {
        font-style: italic;
      }

      > div:first-of-type,
      > div:first-of-type > div:first-of-type {
        flex: 1;
        padding: 0 var.$space-sm var.$space-md;
      }

      .two-pages {
        display: flex;
        flex: 1;
        column-gap: var.$space-md;

        > div {
          flex: 1;
          overflow-y: auto;
        }
      }
    }
  }
}

//elements
@include meta.load-css("elements/button");
@include meta.load-css("elements/heading");
@include meta.load-css("elements/form");
@include meta.load-css("elements/breadcrumb");
@include meta.load-css("elements/not-found");

//components
@include meta.load-css("components/nav");
@include meta.load-css("components/sec-page");
@include meta.load-css("components/header");
@include meta.load-css("components/card");
@include meta.load-css("components/push");
@include meta.load-css("components/modal");
@include meta.load-css("components/footer");
@include meta.load-css("components/search");
@include meta.load-css("components/control-bar");
@include meta.load-css("components/filters-applied");
@include meta.load-css("components/pagination");
@include meta.load-css("components/code");

//pages
@include meta.load-css("pages/homepage-mobile");
@include meta.load-css("pages/projects");
@include meta.load-css("pages/cart");
@include meta.load-css("pages/edit-project");
@include meta.load-css("pages/read-project");
@include meta.load-css("pages/guideline/add-guideline");
@include meta.load-css("pages/guideline/guidelines");
@include meta.load-css("pages/guideline/read-guideline");
@include meta.load-css("pages/login");

//layouts
@include meta.load-css("layouts/auth");

//animations
@include meta.load-css("animation");

//others
@include meta.load-css("overlay");
@include meta.load-css("screen-reader");
@include meta.load-css("display");
